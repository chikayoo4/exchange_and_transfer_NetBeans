/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI_and_operation;

import static UI_and_operation.UI_and_operation.convert_to_short_money_type;
import UI_and_operation.UI_and_operation.dialog_choose_e_d_c;
import UI_and_operation.UI_and_operation.dialog_type_for_db_e_a;
import static UI_and_operation.UI_and_operation.set_admin_password;
import UI_and_operation.UI_and_operation.type_of_money;
import static UI_and_operation.connection_to_ms_sql.getLocal_host;
import static UI_and_operation.connection_to_ms_sql.getLocal_host_password;
import static UI_and_operation.connection_to_ms_sql.getLocal_host_user_name;
import static UI_and_operation.validate_value.add_cuot_to_money;
import java.awt.Font;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chhann_chikay
 */
public class set_service extends javax.swing.JFrame
        implements WindowListener {

    type_of_money selected_money_type_pro_ser;
    UI_and_operation ui_and_ope_obj;
    public void set_ser_to_tb() {

        DefaultTableModel dft = (DefaultTableModel) set_service_tb.getModel();

        dft.setRowCount(0);
        Connection con;
        PreparedStatement pst;
        ResultSet rs;
        try {
            con = DriverManager.getConnection(
                    getLocal_host(),
                    getLocal_host_user_name(),
                    getLocal_host_password()
            );
            //query to access
            pst = con.prepareStatement("SELECT id_pro_service, start_money, end_money, price, "
                    + "(SELECT type_of_money FROM money_type_tb WHERE money_type_tb.id_type_of_money = province_service.id_type_of_money) AS money_type, "
                    + "(SELECT transfer_province FROM province_name_tb WHERE province_name_tb.id_province = province_service.id_province) AS name "
                    + "FROM province_service;");
            rs = pst.executeQuery();

            while (rs.next()) {

                Vector v3 = new Vector();

                String money_type = convert_to_short_money_type(rs.getString("money_type"));

                v3.add(rs.getInt("id_pro_service"));
                v3.add(rs.getString("name"));
                v3.add(add_cuot_to_money(rs.getString("start_money")) + " " + money_type);
                v3.add(add_cuot_to_money(rs.getString("end_money")) + " " + money_type);
                v3.add(add_cuot_to_money(rs.getString("price")) + " " + money_type);
                dft.addRow(v3);
            }
//        set_service_pro_name_cb.addItem();
        } catch (SQLException ex) {
            System.err.println(ex);
        }
    }

    /**
     * Creates new form set_service
     */
    public set_service(UI_and_operation ui_and_ope_obj) {
        initComponents();
        this.ui_and_ope_obj = ui_and_ope_obj;
        setTitle("set service province");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        addWindowListener(this);
        set_ser_to_tb();
        set_service_tb.getTableHeader().setFont(new Font("Khmer OS Siemreap", Font.BOLD, 20));
        set_service_tb.setRowHeight(40);
        set_service_title_lb.setText("Province service");
    }

    public set_service() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        set_service_title_lb = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        set_service_tb = new javax.swing.JTable();
        set_service_add_bn = new javax.swing.JButton();

        jTextField3.setText("jTextField3");

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        set_service_title_lb.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        set_service_title_lb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        set_service_title_lb.setText("x");

        set_service_tb.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        set_service_tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "start", "end", "price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        set_service_tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                set_service_tbMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(set_service_tb);

        set_service_add_bn.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        set_service_add_bn.setText("Add");
        set_service_add_bn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_service_add_bnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(set_service_add_bn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1100, Short.MAX_VALUE)
                    .addComponent(set_service_title_lb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(set_service_title_lb, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(set_service_add_bn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void set_service_add_bnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_set_service_add_bnActionPerformed
        customize_service cus_ser = new customize_service(this, "Add service", "customize service", "Add", dialog_type_for_db_e_a.Add);
        cus_ser.setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_set_service_add_bnActionPerformed

    private void set_service_tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_set_service_tbMouseClicked
        boolean is_edit_tb = set_service_tb.isEditing();
        if (is_edit_tb == false) {
            //table in UI
            DefaultTableModel model = (DefaultTableModel) set_service_tb.getModel();
            //select index of the table row
            int selectedIndex = set_service_tb.getSelectedRow();
            String id_service_pro = model.getValueAt(selectedIndex, 0).toString();
            String name = model.getValueAt(selectedIndex, 1).toString();
            String money_type = model.getValueAt(selectedIndex, 2).toString();
            money_type = money_type.substring(money_type.length() - 1, money_type.length());
            String money_start = model.getValueAt(selectedIndex, 2).toString();
            money_start = money_start.substring(0, money_start.length() - 2);
            String money_end = model.getValueAt(selectedIndex, 3).toString();
            money_end = money_end.substring(0, money_end.length() - 2);
            String price = model.getValueAt(selectedIndex, 4).toString();
            price = price.substring(0, price.length() - 2);
//            JOptionPane.showMessageDialog(this, "You can not edit this table");
            Object[] options = {dialog_choose_e_d_c.Edit, dialog_choose_e_d_c.Delete, dialog_choose_e_d_c.Close};
            dialog_choose_e_d_c choose_from_dialog = dialog_choose_e_d_c.Close;
            int idx = JOptionPane.showOptionDialog(this, "what you choose?", null, JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[2]);
            if (idx != -1) {
                choose_from_dialog = dialog_choose_e_d_c.values()[idx];
            }

//System.out.println("choose_from_dialog : " + choose_from_dialog);
            switch (choose_from_dialog) {
                case Edit:
                    customize_service cus_ser = new customize_service(this, "Edit service", "customize service", "Edit", dialog_type_for_db_e_a.Edit, id_service_pro);
                     cus_ser.set_default_data(money_start, money_end, price, money_type, name);
                    cus_ser.setVisible(true);
                    this.setEnabled(false);
                    set_ser_to_tb();
                    break;
                case Delete:

                    if (!set_admin_password.equals(JOptionPane.showInputDialog(this, "Enter password"))) {
                        JOptionPane.showMessageDialog(this, "Incorrect password", "Alert", JOptionPane.WARNING_MESSAGE);
                    } else {
                        Connection con;
                        PreparedStatement pst;
                        try {
                            con = DriverManager.getConnection(
                                    getLocal_host(),
                                    getLocal_host_user_name(),
                                    getLocal_host_password()
                            );
                            //update sql query to access
                            pst = con.prepareStatement("delete from province_service "
                                    + "where id_pro_service = " + id_service_pro + "");
                            pst.executeUpdate();
                        } catch (SQLException ex) {
                            Logger.getLogger(UI_and_operation.class.getName()).log(Level.SEVERE, null, ex);
                            JOptionPane.showMessageDialog(this, ex);
                        }

                        set_ser_to_tb();
                    }
                    break;
            }
        }
    }//GEN-LAST:event_set_service_tbMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(set_service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(set_service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(set_service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(set_service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new set_service().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton set_service_add_bn;
    private javax.swing.JTable set_service_tb;
    private javax.swing.JLabel set_service_title_lb;
    // End of variables declaration//GEN-END:variables

    @Override
    public void windowOpened(WindowEvent e) {
    }

    @Override
    public void windowClosing(WindowEvent e) {
        ui_and_ope_obj.setEnabled(true);
    }

    @Override
    public void windowClosed(WindowEvent e) {

    }

    @Override
    public void windowIconified(WindowEvent e) {

    }

    @Override
    public void windowDeiconified(WindowEvent e) {

    }

    @Override
    public void windowActivated(WindowEvent e) {

    }

    @Override
    public void windowDeactivated(WindowEvent e) {

    }
}
